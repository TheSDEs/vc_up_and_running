// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/document": {
            "post": {
                "description": "Get document endpoint",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "dc4eu"
                ],
                "summary": "GetDocument",
                "operationId": "get-document",
                "parameters": [
                    {
                        "description": " ",
                        "name": "req",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/apiv1.GetDocumentRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/apiv1.GetDocumentReply"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/helpers.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "delete one document endpoint",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "dc4eu"
                ],
                "summary": "DeleteDocument",
                "operationId": "delete-document",
                "parameters": [
                    {
                        "description": " ",
                        "name": "req",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/apiv1.DeleteDocumentRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/helpers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/document/collect_id": {
            "post": {
                "description": "Get document by collect code endpoint",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "dc4eu"
                ],
                "summary": "GetDocumentByCollectID",
                "operationId": "get-document-collect-id",
                "parameters": [
                    {
                        "description": " ",
                        "name": "req",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/apiv1.GetDocumentCollectIDRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/apiv1.GetDocumentCollectIDReply"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/helpers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/document/revoke": {
            "post": {
                "description": "Revoke one document",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "dc4eu"
                ],
                "summary": "RevokeDocument",
                "operationId": "revoke-document",
                "parameters": [
                    {
                        "description": " ",
                        "name": "req",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/apiv1.RevokeDocumentRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/helpers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/id_mapping": {
            "post": {
                "description": "ID mapping endpoint",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "dc4eu"
                ],
                "summary": "IDMapping",
                "operationId": "id-mapping",
                "parameters": [
                    {
                        "description": " ",
                        "name": "req",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.MetaData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/apiv1.IDMappingReply"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/helpers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/ladok/pdf/revoke/{transaction_id}": {
            "put": {
                "description": "revoke a singed pdf",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ladok"
                ],
                "summary": "revoke signed pdf",
                "operationId": "ladok-pdf-revoke",
                "parameters": [
                    {
                        "type": "string",
                        "description": "transaction_id",
                        "name": "transaction_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/apiv1.PDFRevokeReply"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/helpers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/ladok/pdf/sign": {
            "post": {
                "description": "sign base64 encoded PDF",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ladok"
                ],
                "summary": "Sign pdf",
                "operationId": "ladok-pdf-sign",
                "parameters": [
                    {
                        "description": " ",
                        "name": "req",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/apiv1.PDFSignRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/apiv1.PDFSignReply"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/helpers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/ladok/pdf/validate": {
            "post": {
                "description": "validate a signed base64 encoded PDF",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ladok"
                ],
                "summary": "Validate pdf",
                "operationId": "ladok-pdf-validate",
                "parameters": [
                    {
                        "description": " ",
                        "name": "req",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/apiv1.PDFValidateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/apiv1.PDFValidateReply"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/helpers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/ladok/pdf/{transaction_id}": {
            "get": {
                "description": "fetch a singed pdf",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ladok"
                ],
                "summary": "fetch singed pdf",
                "operationId": "ladok-pdf-fetch",
                "parameters": [
                    {
                        "type": "string",
                        "description": "transaction_id",
                        "name": "transaction_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/apiv1.PDFGetSignedReply"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/helpers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/notification": {
            "post": {
                "description": "notification endpoint",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "dc4eu"
                ],
                "summary": "Notification",
                "operationId": "generic-notification",
                "parameters": [
                    {
                        "description": " ",
                        "name": "req",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/apiv1.NotificationRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/apiv1.NotificationReply"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/helpers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/portal": {
            "post": {
                "description": "Get portal data endpoint",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "dc4eu"
                ],
                "summary": "Portal",
                "operationId": "portal",
                "parameters": [
                    {
                        "description": " ",
                        "name": "req",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/apiv1.PortalRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/apiv1.PortalReply"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/helpers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/revoke": {
            "post": {
                "description": "Revoke endpoint",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "dc4eu"
                ],
                "summary": "Revoke",
                "operationId": "generic-revoke",
                "parameters": [
                    {
                        "description": " ",
                        "name": "req",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/apiv1.RevokeRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/apiv1.RevokeReply"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/helpers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/upload": {
            "post": {
                "description": "Upload endpoint",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "dc4eu"
                ],
                "summary": "Upload",
                "operationId": "generic-upload",
                "parameters": [
                    {
                        "description": " ",
                        "name": "req",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/apiv1.UploadRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/helpers.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "apiv1.DeleteDocumentRequest": {
            "type": "object",
            "properties": {
                "authentic_source": {
                    "description": "required: true\nexample: skatteverket",
                    "type": "string"
                },
                "document_id": {
                    "description": "required: true\nexample: 5e7a981c-c03f-11ee-b116-9b12c59362b9",
                    "type": "string"
                }
            }
        },
        "apiv1.GetDocumentCollectIDReply": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/model.Upload"
                }
            }
        },
        "apiv1.GetDocumentCollectIDRequest": {
            "type": "object",
            "required": [
                "authentic_source",
                "collect_id",
                "document_type",
                "identity"
            ],
            "properties": {
                "authentic_source": {
                    "type": "string"
                },
                "collect_id": {
                    "type": "string"
                },
                "document_type": {
                    "type": "string"
                },
                "identity": {
                    "$ref": "#/definitions/model.Identity"
                }
            }
        },
        "apiv1.GetDocumentReply": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "object",
                    "properties": {
                        "document_data": {},
                        "meta": {
                            "$ref": "#/definitions/model.MetaData"
                        }
                    }
                }
            }
        },
        "apiv1.GetDocumentRequest": {
            "type": "object",
            "required": [
                "authentic_source",
                "document_id",
                "document_type"
            ],
            "properties": {
                "authentic_source": {
                    "type": "string"
                },
                "document_id": {
                    "type": "string"
                },
                "document_type": {
                    "type": "string"
                }
            }
        },
        "apiv1.IDMappingReply": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "object",
                    "properties": {
                        "authentic_source_person_id": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "apiv1.NotificationReply": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/model.QR"
                }
            }
        },
        "apiv1.NotificationRequest": {
            "type": "object",
            "properties": {
                "authentic_source": {
                    "type": "string"
                },
                "document_id": {
                    "type": "string"
                },
                "document_type": {
                    "type": "string"
                }
            }
        },
        "apiv1.PDFGetSignedReply": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "object",
                    "properties": {
                        "document": {
                            "$ref": "#/definitions/types.Document"
                        },
                        "message": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "apiv1.PDFRevokeReply": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "object",
                    "properties": {
                        "status": {
                            "type": "boolean"
                        }
                    }
                }
            }
        },
        "apiv1.PDFSignReply": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "object",
                    "required": [
                        "transaction_id"
                    ],
                    "properties": {
                        "transaction_id": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "apiv1.PDFSignRequest": {
            "type": "object",
            "required": [
                "pdf"
            ],
            "properties": {
                "pdf": {
                    "type": "string"
                }
            }
        },
        "apiv1.PDFValidateReply": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/types.Validation"
                }
            }
        },
        "apiv1.PDFValidateRequest": {
            "type": "object",
            "properties": {
                "pdf": {
                    "type": "string"
                }
            }
        },
        "apiv1.PortalReply": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Upload"
                    }
                }
            }
        },
        "apiv1.PortalRequest": {
            "type": "object",
            "required": [
                "authentic_source",
                "authentic_source_person_id"
            ],
            "properties": {
                "authentic_source": {
                    "type": "string"
                },
                "authentic_source_person_id": {
                    "type": "string"
                },
                "document_type": {
                    "type": "string"
                },
                "valid_from": {
                    "type": "integer"
                },
                "valid_to": {
                    "type": "integer"
                }
            }
        },
        "apiv1.RevokeDocumentRequest": {
            "type": "object",
            "required": [
                "authentic_source",
                "document_type",
                "revocation"
            ],
            "properties": {
                "authentic_source": {
                    "type": "string"
                },
                "document_type": {
                    "type": "string"
                },
                "revocation": {
                    "$ref": "#/definitions/model.Revocation"
                }
            }
        },
        "apiv1.RevokeReply": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "object",
                    "properties": {
                        "status": {
                            "type": "boolean"
                        }
                    }
                }
            }
        },
        "apiv1.RevokeRequest": {
            "type": "object",
            "properties": {
                "authentic_source": {
                    "type": "string"
                },
                "document_id": {
                    "type": "string"
                },
                "document_type": {
                    "type": "string"
                },
                "revocation_id": {
                    "type": "string"
                }
            }
        },
        "apiv1.UploadRequest": {
            "type": "object",
            "required": [
                "attestation",
                "document_data",
                "identity",
                "meta"
            ],
            "properties": {
                "attestation": {
                    "$ref": "#/definitions/model.Attestation"
                },
                "document_data": {
                    "type": "object",
                    "additionalProperties": {}
                },
                "identity": {
                    "$ref": "#/definitions/model.Identity"
                },
                "meta": {
                    "$ref": "#/definitions/model.MetaData"
                }
            }
        },
        "helpers.Error": {
            "type": "object",
            "properties": {
                "details": {},
                "title": {
                    "type": "string"
                }
            }
        },
        "helpers.ErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "$ref": "#/definitions/helpers.Error"
                }
            }
        },
        "model.Attestation": {
            "type": "object",
            "required": [
                "description_long",
                "description_short",
                "description_structured",
                "type",
                "version"
            ],
            "properties": {
                "description_long": {
                    "description": "TODO(masv): change TextLong to DescriptionLong\nrequired: true\nexample: European Health Insurance Card",
                    "type": "string"
                },
                "description_short": {
                    "description": "TODO(masv): ShortText to DescriptionShort, more descriptive, pun intended\nrequired: true\nexample: EHIC",
                    "type": "string"
                },
                "description_structured": {
                    "description": "DescriptionStructured is a map of structured descriptions\nrequired: true\nexample: {\"en\": \"European Health Insurance Card\", \"sv\": \"Europeiskt sjukförsäkringskortet\"}",
                    "type": "object",
                    "additionalProperties": {}
                },
                "type": {
                    "description": "required: true\nexample: secure",
                    "type": "string"
                },
                "version": {
                    "description": "TODO(masv): change AttestationDataVersion to AttestationVersion, data seems redundant\nrequired: true\nexample: \"1.0.0\"",
                    "type": "string"
                }
            }
        },
        "model.Identity": {
            "type": "object",
            "required": [
                "birth_date",
                "family_name",
                "given_name",
                "version"
            ],
            "properties": {
                "birth_city": {
                    "description": "required: false\nexample: Stockholm",
                    "type": "string"
                },
                "birth_country": {
                    "description": "TODO(masv): full name or just country code?\nrequired: false\nexample: sweden",
                    "type": "string"
                },
                "birth_date": {
                    "description": "required: true\nexample: 1970-01-01",
                    "type": "string"
                },
                "birth_place": {
                    "description": "required: false\nexample: Stockholm",
                    "type": "string"
                },
                "birth_state": {
                    "description": "required: false\nexample: Stockholm",
                    "type": "string"
                },
                "family_name": {
                    "description": "required: true\nexample: Svensson",
                    "type": "string"
                },
                "family_name_at_birth": {
                    "description": "required: false\nexample: Karlsson",
                    "type": "string"
                },
                "gender": {
                    "description": "required: false\nexample: male",
                    "type": "string"
                },
                "given_name": {
                    "description": "required: true\nexample: Magnus",
                    "type": "string"
                },
                "given_name_at_birth": {
                    "description": "required: false\nexample: Magnus",
                    "type": "string"
                },
                "nationality": {
                    "description": "required: false\nexample: swedish",
                    "type": "string"
                },
                "resident_address": {
                    "description": "required: false\nexample: 221b baker street",
                    "type": "string"
                },
                "resident_city": {
                    "description": "required: false\nexample: london",
                    "type": "string"
                },
                "resident_country": {
                    "description": "required: false\nexample: england",
                    "type": "string"
                },
                "resident_house_number": {
                    "description": "required: false\nexample: 221b",
                    "type": "string"
                },
                "resident_postal_code": {
                    "description": "required: false\nexample: W1U 6SG",
                    "type": "string"
                },
                "resident_state": {
                    "description": "required: false\nexample: england",
                    "type": "string"
                },
                "resident_street": {
                    "description": "required: false\nexample: baker street",
                    "type": "string"
                },
                "version": {
                    "description": "required: true\nexample: \"1.0.0\"",
                    "type": "string"
                }
            }
        },
        "model.MetaData": {
            "type": "object",
            "required": [
                "authentic_source",
                "authentic_source_person_id",
                "date_of_birth",
                "document_id",
                "document_type",
                "document_version",
                "first_name",
                "last_name",
                "member_state",
                "valid_from",
                "valid_to"
            ],
            "properties": {
                "authentic_source": {
                    "description": "required: true\nexample: SUNET",
                    "type": "string"
                },
                "authentic_source_person_id": {
                    "description": "required: true\nexample: 65636cbc-c03f-11ee-8dc4-67135cc9bd8a",
                    "type": "string"
                },
                "collect_id": {
                    "description": "required: false\nexample: 98fe67fc-c03f-11ee-bbee-4345224d414f",
                    "type": "string"
                },
                "created_at": {
                    "description": "required: false\nexample: 509567558",
                    "type": "integer"
                },
                "date_of_birth": {
                    "description": "required: true\nexample: 1970-01-01",
                    "type": "string"
                },
                "document_id": {
                    "description": "required: true\nexample: 5e7a981c-c03f-11ee-b116-9b12c59362b9",
                    "type": "string"
                },
                "document_type": {
                    "description": "required: true\nexample: PDA1",
                    "type": "string",
                    "enum": [
                        "PDA1",
                        "EHIC"
                    ]
                },
                "document_version": {
                    "description": "required: true\nexample: \"1.0.0\"",
                    "type": "string"
                },
                "first_name": {
                    "description": "required: true\nexample: John",
                    "type": "string"
                },
                "last_name": {
                    "description": "required: true\nexample: Doe",
                    "type": "string"
                },
                "member_state": {
                    "description": "required: true\nexample: \"DE\"",
                    "type": "string"
                },
                "revocation": {
                    "description": "Revocation is a collection of fields representing a revocation",
                    "allOf": [
                        {
                            "$ref": "#/definitions/model.Revocation"
                        }
                    ]
                },
                "valid_from": {
                    "description": "required: false\nexample: 509567558",
                    "type": "integer"
                },
                "valid_to": {
                    "description": "required: false\nexample: 509567558",
                    "type": "integer"
                }
            }
        },
        "model.QR": {
            "type": "object",
            "required": [
                "base64_image",
                "deep_link"
            ],
            "properties": {
                "base64_image": {
                    "type": "string"
                },
                "deep_link": {
                    "type": "string"
                }
            }
        },
        "model.Revocation": {
            "type": "object",
            "properties": {
                "follow_up_credential": {
                    "description": "FollowUpCredential is the ID of the follow-up credential\nrequired: false\nexample: https://example.com/credential/?collect_id=8dbd2680-c03f-11ee-a21b-034aafe41222",
                    "type": "string"
                },
                "id": {
                    "description": "ID is the ID of the revocation\nrequired: false\nexample: 8dbd2680-c03f-11ee-a21b-034aafe41222",
                    "type": "string"
                },
                "reason": {
                    "description": "Reason is the reason for revocation\nrequired: false\nexample: lost or stolen",
                    "type": "string"
                },
                "revoked": {
                    "description": "Revoked is a flag to indicate if the document has been revoked\nrequired: false\nexample: false",
                    "type": "boolean"
                },
                "revoked_at": {
                    "description": "RevokedAt is the time the document was revoked or going to be revoked\nrequired: false\nexample: 509567558",
                    "type": "integer"
                }
            }
        },
        "model.Upload": {
            "type": "object",
            "required": [
                "attestation",
                "document_data",
                "identity",
                "meta"
            ],
            "properties": {
                "attestation": {
                    "$ref": "#/definitions/model.Attestation"
                },
                "document_data": {
                    "type": "object",
                    "additionalProperties": {}
                },
                "identity": {
                    "$ref": "#/definitions/model.Identity"
                },
                "meta": {
                    "$ref": "#/definitions/model.MetaData"
                },
                "qr": {
                    "$ref": "#/definitions/model.QR"
                }
            }
        },
        "types.Document": {
            "type": "object",
            "properties": {
                "base64_data": {
                    "type": "string"
                },
                "contact_info": {
                    "type": "string"
                },
                "create_ts": {
                    "type": "integer"
                },
                "error": {
                    "type": "string"
                },
                "location": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "modify_ts": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "reason": {
                    "type": "string"
                },
                "revoked_ts": {
                    "type": "integer"
                },
                "transaction_id": {
                    "type": "string"
                }
            }
        },
        "types.Validation": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                },
                "is_revoked": {
                    "type": "boolean"
                },
                "message": {
                    "type": "string"
                },
                "transaction_id": {
                    "type": "string"
                },
                "valid_signature": {
                    "type": "boolean"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "0.1.0",
	Host:             "",
	BasePath:         "/api/v1",
	Schemes:          []string{},
	Title:            "Datastore API",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
